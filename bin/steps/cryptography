#!/usr/bin/env bash

# This script serves as the Pylibmc build step of the
# [**Python Buildpack**](https://github.com/Scalingo/python-buildpack)
# compiler.
#
# A [buildpack](http://doc.scalingo.com/buildpacks) is an
# adapter between a Python application and Scalingo's runtime.
#
# This script is invoked by [`bin/compile`](/).

# The location of the pre-compiled libffi binary.
VENDORED_LIBFFI="https://lang-python.s3.amazonaws.com/$STACK/libraries/vendor/libffi.tar.gz"

PKG_CONFIG_PATH="/app/.scalingo/vendor/lib/pkgconfig:$PKG_CONFIG_PATH"

# Syntax sugar.
source $BIN_DIR/utils

bpwatch start libffi_install

# If pylibmc exists within requirements, use vendored cryptography.
if (pip-grep -s requirements.txt argon2-cffi bcrypt cffi cryptography django[argon2] Django[argon2] django[bcrypt] Django[bcrypt] PyNaCl pyOpenSSL PyOpenSSL kinto-pusher requests[security] misaka &> /dev/null) then

  if [ ! -d ".scalingo/vendor/lib/libffi-3.1" ]; then
    echo "-----> Noticed cffi. Bootstrapping libffi."
    mkdir -p .scalingo/vendor
    # Download and extract cryptography into target vendor directory.
    curl -L $VENDORED_LIBFFI -s | tar zxv -C .scalingo/vendor &> /dev/null

    sed -i 's/\.heroku/.scalingo/' .scalingo/vendor/lib/pkgconfig/libffi.pc
    sed -i 's/\.heroku/.scalingo/' .scalingo/vendor/lib/libffi.la
  fi

  export LIBFFI=$(pwd)/vendor
fi

bpwatch stop libffi_install
